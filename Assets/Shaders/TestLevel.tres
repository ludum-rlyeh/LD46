[gd_resource type="ShaderMaterial" load_steps=16 format=2]

[sub_resource type="VisualShaderNodeTextureUniform" id=1]
uniform_name = "CameraViewport"
texture_type = 1

[sub_resource type="VisualShaderNodeTextureUniform" id=2]
uniform_name = "ForegroundViewport"
texture_type = 1
color_default = 1

[sub_resource type="VisualShaderNodeVectorScalarMix" id=3]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=5]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=6]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=7]
output_port_for_preview = 0
default_input_values = [ 0, 0.2, 1, 0.4, 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=8]
uniform_name = "min_blur"

[sub_resource type="VisualShaderNodeScalarUniform" id=9]
uniform_name = "max_blur"

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDistance" id=11]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVec3Constant" id=12]
constant = Vector3( 0.5, 0.5, 0 )

[sub_resource type="VisualShaderNodeScalarConstant" id=13]
constant = 0.4

[sub_resource type="VisualShaderNodeScalarOp" id=14]
output_port_for_preview = 0
operator = 3

[sub_resource type="VisualShader" id=15]
code = "shader_type canvas_item;
uniform sampler2D CameraViewport : hint_albedo;
uniform sampler2D ForegroundViewport : hint_black_albedo;
uniform float min_blur;
uniform float max_blur;



void vertex() {
// Output:0

}

void fragment() {
// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// TextureUniform:14
	vec3 n_out14p0;
	float n_out14p1;
	{
		vec4 n_tex_read = texture(CameraViewport, n_out4p0.xy);
		n_out14p0 = n_tex_read.rgb;
		n_out14p1 = n_tex_read.a;
	}

// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(ForegroundViewport, n_out4p0.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// ScalarUniform:32
	float n_out32p0 = min_blur;

// ScalarUniform:33
	float n_out33p0 = max_blur;

// Vector:7
	vec3 n_out7p0 = vec3(0.500000, 0.500000, 0.000000);

// Distance:6
	float n_out6p0 = distance(n_out4p0, n_out7p0);

// ScalarSmoothStep:31
	float n_out31p0 = smoothstep(n_out32p0, n_out33p0, n_out6p0);

// ScalarOp:30
	float n_out30p0 = n_out2p1 * n_out31p0;

// VectorScalarMix:23
	vec3 n_out23p0 = mix(n_out14p0, n_out2p0, n_out30p0);

// Output:0
	COLOR.rgb = n_out23p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -629, 206.25 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1260, 200 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( 100, 220 )
nodes/fragment/4/node = SubResource( 10 )
nodes/fragment/4/position = Vector2( -280, 200 )
nodes/fragment/6/node = SubResource( 11 )
nodes/fragment/6/position = Vector2( -260, 360 )
nodes/fragment/7/node = SubResource( 12 )
nodes/fragment/7/position = Vector2( -680, 280 )
nodes/fragment/8/node = SubResource( 13 )
nodes/fragment/8/position = Vector2( 340, 800 )
nodes/fragment/9/node = SubResource( 14 )
nodes/fragment/9/position = Vector2( 620, 580 )
nodes/fragment/14/node = SubResource( 1 )
nodes/fragment/14/position = Vector2( 100, 20 )
nodes/fragment/23/node = SubResource( 3 )
nodes/fragment/23/position = Vector2( 940, 200 )
nodes/fragment/28/node = SubResource( 4 )
nodes/fragment/28/position = Vector2( 180, 620 )
nodes/fragment/29/node = SubResource( 5 )
nodes/fragment/29/position = Vector2( 380, 480 )
nodes/fragment/30/node = SubResource( 6 )
nodes/fragment/30/position = Vector2( 700, 280 )
nodes/fragment/31/node = SubResource( 7 )
nodes/fragment/31/position = Vector2( -60, 500 )
nodes/fragment/32/node = SubResource( 8 )
nodes/fragment/32/position = Vector2( -440, 580 )
nodes/fragment/33/node = SubResource( 9 )
nodes/fragment/33/position = Vector2( -440, 660 )
nodes/fragment/connections = PoolIntArray( 4, 0, 2, 0, 4, 0, 6, 0, 7, 0, 6, 1, 4, 0, 14, 0, 14, 0, 23, 0, 2, 0, 23, 1, 23, 0, 0, 0, 28, 0, 29, 0, 6, 0, 29, 1, 29, 0, 9, 0, 8, 0, 9, 1, 30, 0, 23, 2, 2, 1, 30, 0, 31, 0, 28, 1, 6, 0, 31, 2, 31, 0, 30, 1, 32, 0, 31, 0, 33, 0, 31, 1 )

[resource]
shader = SubResource( 15 )
shader_param/min_blur = 0.2
shader_param/max_blur = 0.4
