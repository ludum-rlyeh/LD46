[gd_scene load_steps=12 format=2]

[ext_resource path="res://Assets/Animations/BlindGuy.tres" type="SpriteFrames" id=1]
[ext_resource path="res://Assets/Sounds/wihelm.wav" type="AudioStream" id=2]
[ext_resource path="res://Assets/Sounds/wood01.wav" type="AudioStream" id=3]
[ext_resource path="res://Assets/Sounds/take_damage02.wav" type="AudioStream" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

const FOLLOW_SPEED = 2.0
const MAX_DOGGO_DIST = 100.0

var follow = false
var attract = Vector2.ZERO

# Called when the node enters the scene tree for the first time.
func _ready():
	Events.connect(\"died_signal\",self,\"on_died_signal\")
	Events.connect(\"set_begin_position_signal\", self, \"_on_set_begin_position\")
	set_physics_process(true)
	
func _on_set_begin_position(pos):
	position = pos
	
func _physics_process(delta):
	var doggos = get_tree().get_nodes_in_group(\"doggo\")
	if doggos and doggos.size() > 0:
		var doggo = doggos[0]
	
		attract_doggo(Vector2(0.0,0.0),doggo)
		if self.position.distance_to(doggo.position) >= MAX_DOGGO_DIST:
			follow = true
		
		var velocity = Vector2.ZERO
		if follow :
			var mid_pos = self.position.linear_interpolate(doggo.position, delta*FOLLOW_SPEED)
			velocity = mid_pos - self.position
		
		if attract != Vector2.ZERO :
			velocity += attract
			attract_doggo(attract,doggo)
		
		if velocity != Vector2.ZERO:
			var collision_info = self.move_and_collide(velocity)
			set_animation(velocity)
			
			if not $StepAudioPlayer2D.playing :
				$StepAudioPlayer2D.play()
			
			# If collide dogo
			if collision_info :
				
				velocity = velocity.bounce(collision_info.normal)
				self.move_and_slide(velocity)
				if collision_info.collider_id == doggo.get_instance_id():
					follow = false
				else: # attract dog if locked on wall
					if not $HitAudioPlayer2D.playing :
						$HitAudioPlayer2D.play()
					attract_doggo(Vector2(10.0,0.0),doggo)
		else:
			if not $AnimatedSprite.animation.begins_with(\"wait_\"):
				$AnimatedSprite.animation = \"wait_\" + $AnimatedSprite.animation
		
		update()
	

func set_animation(var velocity):
	var angle = velocity.angle()
	if  angle >= -PI/4.0 and angle < PI/4.0: # go right
		if $AnimatedSprite.animation != \"right\": $AnimatedSprite.animation = \"right\"
	elif angle >= PI/4.0 and angle < 3.0*PI/4.0 : # go down
		if $AnimatedSprite.animation != \"down\": $AnimatedSprite.animation = \"down\"
	elif (angle >= 3.0*PI/4.0 and angle < PI) or  (angle < -3.0*PI/4.0 and angle > -PI) : # go left
		if $AnimatedSprite.animation != \"left\": $AnimatedSprite.animation = \"left\"
	else : # go up
		if $AnimatedSprite.animation != \"up\": $AnimatedSprite.animation = \"up\"

func set_attract(var attract):
	self.attract = attract 
	if attract == Vector2.ZERO:
		var tree = get_tree()
		if tree :
			var doggos = tree.get_nodes_in_group(\"doggo\")
			if doggos and doggos.size() > 0:
				var doggo = doggos[0]
				doggo.set_attract(Vector2.ZERO)

func attract_doggo(var attract, var doggo):
	var attract_bis = Vector2.ZERO # just in case
	if attract != Vector2.ZERO and self.position.distance_to(doggo.position) >= MAX_DOGGO_DIST:
		attract_bis = (self.position - doggo.position).normalized() * attract.length() * 20.0
	doggo.set_attract(attract_bis)

func on_died_signal(var body_id, var type):
	if body_id == self.get_instance_id():
		if type == Enums.DIE_TYPE.FELL_IN_SEEKER:
			self.call_deferred(\"set_physics_process\",false)
			$AnimationPlayer.play(\"fall\")
			yield($AnimationPlayer,\"animation_finished\")
		
		Events.emit_signal(\"game_over_signal\", Enums.GAME_OVER_TYPE.HUMAN_DIED)

func _draw():
	var doggos = get_tree().get_nodes_in_group(\"doggo\")
	if doggos and doggos.size() > 0:
		var doggo = doggos[0]
		draw_line(Vector2.ZERO, doggo.position - self.position, Color(1.0, 0.0, 0.0))
"

[sub_resource type="GDScript" id=2]
script/source = "extends AnimatedSprite


# Called when the node enters the scene tree for the first time.
func _ready():
	self.play(\"wait_down\")
	self.visible = true

"

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 23.9719, 30.2642 )

[sub_resource type="AudioStreamRandomPitch" id=4]
audio_stream = ExtResource( 3 )

[sub_resource type="AudioStreamRandomPitch" id=5]
audio_stream = ExtResource( 4 )

[sub_resource type="AudioStreamRandomPitch" id=6]
audio_stream = ExtResource( 2 )

[sub_resource type="Animation" id=7]
tracks/0/type = "value"
tracks/0/path = NodePath("AnimatedSprite:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "fall" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("AnimatedSprite:playing")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("AnimatedSprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 4, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.4 )
}
tracks/3/type = "value"
tracks/3/path = NodePath("AnimatedSprite:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.6 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/4/type = "method"
tracks/4/path = NodePath("FallAudioPlayer2D")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ 0.0 ],
"method": "play"
} ]
}

[node name="BlindGuy" type="KinematicBody2D"]
collision_layer = 6
collision_mask = 27
script = SubResource( 1 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
frames = ExtResource( 1 )
animation = "fall"
script = SubResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( -1, -4 )
shape = SubResource( 3 )

[node name="StepAudioPlayer2D" type="AudioStreamPlayer2D" parent="."]
stream = SubResource( 4 )
volume_db = 1.0

[node name="HitAudioPlayer2D" type="AudioStreamPlayer2D" parent="."]
stream = SubResource( 5 )

[node name="FallAudioPlayer2D" type="AudioStreamPlayer2D" parent="."]
stream = SubResource( 6 )
volume_db = -2.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/fall = SubResource( 7 )
