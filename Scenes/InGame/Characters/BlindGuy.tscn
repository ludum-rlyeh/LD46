[gd_scene load_steps=5 format=2]

[ext_resource path="res://Assets/Animations/BlindGuy.tres" type="SpriteFrames" id=1]
[ext_resource path="res://Scenes/InGame/Characters/Doggo.tscn" type="PackedScene" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

const FOLLOW_SPEED = 2.0
const MAX_DOGGO_DIST = 100.0

var follow = false
var attract = Vector2.ZERO

var doggo

# Called when the node enters the scene tree for the first time.
func _ready():
	doggo = $Harness/Doggo
	set_physics_process(true)


func _physics_process(delta):
	if self.position.distance_to(doggo.position) >= MAX_DOGGO_DIST:
		follow = true
	
	var velocity = Vector2.ZERO
	if follow :
		var mid_pos = self.position.linear_interpolate(doggo.position, delta*FOLLOW_SPEED)
		velocity = mid_pos - self.position
	
	if attract != Vector2.ZERO :
		velocity += attract
		attract_doggo(attract)
	
	if velocity != Vector2.ZERO:
		var collision_info = self.move_and_collide(velocity)
		set_animation(velocity)
		
		# If collide dogo
		if collision_info :
			velocity = velocity.bounce(collision_info.normal)
			self.move_and_slide(velocity)
			if collision_info.collider_id == $Harness/Doggo.get_instance_id():
				follow = false
			else: #TODO test that
				attract_doggo(Vector2(10.0,0.0))
	

func set_animation(var velocity):
	var angle = velocity.angle()
	if  angle >= -PI/4.0 and angle < PI/4.0: # go right
		if $AnimatedSprite.animation != \"right\": $AnimatedSprite.animation = \"right\"
	elif angle >= PI/4.0 and angle < 3.0*PI/4.0 : # go down
		if $AnimatedSprite.animation != \"down\": $AnimatedSprite.animation = \"down\"
	elif angle >= 3.0*PI/4.0 and angle < -3.0*PI/4.0: # go left
		if $AnimatedSprite.animation != \"left\": $AnimatedSprite.animation = \"left\"
	else : # TODO: go up
		if $AnimatedSprite.animation != \"left\": $AnimatedSprite.animation = \"left\"

func set_attract(var attract):
	self.attract = attract 
	if attract == Vector2.ZERO:
		doggo.set_attract(Vector2.ZERO)

func attract_doggo(var attract):
	var attract_bis = Vector2.ZERO # just in case
	if attract != Vector2.ZERO and self.position.distance_to(doggo.position) >= MAX_DOGGO_DIST:
		attract_bis = (self.position - doggo.position).normalized() * attract.length() / 8.0
	doggo.set_attract(attract_bis)
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 23.9719, 30.2642 )

[node name="BlindGuy" type="KinematicBody2D"]
collision_layer = 6
collision_mask = 27
script = SubResource( 1 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
frames = ExtResource( 1 )
animation = "down"
playing = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( -1, -4 )
shape = SubResource( 2 )

[node name="Harness" type="Node" parent="."]

[node name="Doggo" parent="Harness" instance=ExtResource( 2 )]
position = Vector2( 69, 73 )
