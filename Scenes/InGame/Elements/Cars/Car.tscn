[gd_scene load_steps=19 format=2]

[ext_resource path="res://Assets/Sprites/Sheets/Car_b.png" type="Texture" id=1]
[ext_resource path="res://Scripts/StateMachine.gd" type="Script" id=2]
[ext_resource path="res://Assets/Sprites/Sheets/Car_r.png" type="Texture" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends PathFollow2D

export (bool) var Debug = false
export (float) var init_speed = 40;
export (Enums.DRIVER_MOOD) var driver_mood

var speed : float

func set_speed(value):
	speed = value

func _ready():
	speed = init_speed
	
func change_path(path : Path2D) -> void:
	if Debug : print(\"Car : Change path\")
	get_parent().call_deferred(\"remove_child\", self)
	path.call_deferred(\"add_child\", self)
	offset = 0

func _on_Collision_body_shape_entered(body_id, body, body_shape, area_shape):
	if Debug : print(\"Crushed by a car : \", body)
	Events.emit_signal(\"died_signal\", body_id, Enums.DIE_TYPE.CRUSHED_BY_CAR)
"

[sub_resource type="AtlasTexture" id=2]
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=3]
atlas = ExtResource( 1 )
region = Rect2( 128, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 1 )
region = Rect2( 256, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 1 )
region = Rect2( 0, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=11]
atlas = ExtResource( 3 )
region = Rect2( 0, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=12]
atlas = ExtResource( 3 )
region = Rect2( 128, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=13]
atlas = ExtResource( 3 )
region = Rect2( 256, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=14]
atlas = ExtResource( 3 )
region = Rect2( 0, 128, 128, 128 )

[sub_resource type="SpriteFrames" id=6]
animations = [ {
"frames": [ SubResource( 2 ), SubResource( 3 ), SubResource( 4 ), SubResource( 5 ) ],
"loop": true,
"name": "blue",
"speed": 5.0
}, {
"frames": [ SubResource( 11 ), SubResource( 12 ), SubResource( 13 ), SubResource( 14 ) ],
"loop": true,
"name": "orange",
"speed": 5.0
} ]

[sub_resource type="GDScript" id=15]
script/source = "extends AnimatedSprite

var color = [\"orange\", \"blue\"]

func _ready():
	color.shuffle()
	self.play(color.front())
"

[sub_resource type="GDScript" id=7]
resource_name = "FollowPath"
script/source = "extends Node

var fsm : StateMachine
var is_active = false
var _last_area : Area2D

onready var _path_follower : Node2D = get_node(\"../..\")
var _tween : Tween

func _ready():
	_tween = get_node(\"../Tween\")

func enter(var params : Array) -> void:
	if _path_follower.Debug : print(\"Car : Following path\")
	match _path_follower.driver_mood:
		Enums.DRIVER_MOOD.NORMAL:
			_tween.interpolate_property(_path_follower, \"speed\", null, _path_follower.init_speed, 2, Tween.TRANS_LINEAR, Tween.EASE_OUT)
		Enums.DRIVER_MOOD.DRUNK:
			_tween.interpolate_property(_path_follower, \"speed\", null, _path_follower.init_speed, 2, Tween.TRANS_LINEAR, Tween.EASE_OUT)
		Enums.DRIVER_MOOD.FAST:
			_tween.interpolate_property(_path_follower, \"speed\", null, _path_follower.init_speed, 1, Tween.TRANS_LINEAR, Tween.EASE_OUT)
	_tween.start()
func exit(next_state : String, params : Array) -> void:
	_tween.stop_all()
	fsm.change_to(next_state, params)
	
func process(delta) -> void:
		_update_car_position(delta)

func _update_car_position(delta) -> void:
	_path_follower.set_offset(_path_follower.get_offset() + _path_follower.speed * delta)

func _on_CollisionArea_area_entered(area : Area2D) -> void:
	if is_active && _last_area != area:
		if _path_follower.Debug : print(\"Car : Detection new Trigger\")
		_last_area = area
		match area.get_type():
			Enums.TRIGGER_TYPE.CHANGE_TRACK:
				_path_follower.change_path(area.get_track_path())
			Enums.TRIGGER_TYPE.BREAK_ZONE:
				exit(\"BreakZone\", [])
		
"

[sub_resource type="GDScript" id=8]
resource_name = "BreakZone"
script/source = "extends Node

var fsm : StateMachine
var _tween : Tween

var is_active = false
var _last_area : Area2D

onready var _path_follower : Node2D = get_node(\"../..\")
onready var _trigger = _path_follower.get_node(\"Trigger\")

func _ready():
	_tween = get_node(\"../Tween\")

func enter(var params : Array) -> void:
	if _path_follower.Debug : print(\"Car : Breaking or not!\")
	match _path_follower.driver_mood:
		Enums.DRIVER_MOOD.NORMAL:
			_tween.interpolate_property(_path_follower, \"speed\", null, 0, 1, Tween.TRANS_LINEAR,  Tween.EASE_OUT)
		Enums.DRIVER_MOOD.DRUNK:
			_tween.interpolate_property(_path_follower, \"speed\", null, _path_follower.init_speed/2, 1, Tween.TRANS_LINEAR,  Tween.EASE_OUT)
		Enums.DRIVER_MOOD.FAST:
			_tween.interpolate_property(_path_follower, \"speed\", null, 0, 2, Tween.TRANS_LINEAR,  Tween.EASE_OUT)
	_tween.start()
	
func exit(next_state : String, params : Array) -> void:
	_tween.stop_all()
	fsm.change_to(next_state, params)
	
func process(delta):
	_path_follower.set_offset(_path_follower.get_offset() + _path_follower.speed * delta)
	
	if !_is_inside_break_zone():
		exit(\"FollowPath\", [])
		
func _is_inside_break_zone():
	for area in _trigger.get_overlapping_areas():
		if area.get_type() == Enums.TRIGGER_TYPE.BREAK_ZONE && area.monitorable:
			return true
	return false

func _on_CollisionArea_area_entered(area : Area2D) -> void:
	if is_active && _last_area != area:
		if _path_follower.Debug : print(\"Car : Detection new Trigger entering\")
		_last_area = area
		match area.get_type():
			Enums.TRIGGER_TYPE.CHANGE_TRACK:
				_path_follower.change_path(area.get_track_path())
"

[sub_resource type="RectangleShape2D" id=9]
extents = Vector2( 6.3989, 2.36384 )

[sub_resource type="RectangleShape2D" id=10]
extents = Vector2( 15.9143, 36.9403 )

[node name="CarPathFollower" type="PathFollow2D"]
script = SubResource( 1 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
position = Vector2( 5.53244, -1.15984 )
rotation = -1.5708
frames = SubResource( 6 )
animation = "orange"
frame = 3
playing = true
script = SubResource( 15 )

[node name="StateMachine" type="Node" parent="."]
script = ExtResource( 2 )

[node name="FollowPath" type="Node" parent="StateMachine"]
script = SubResource( 7 )

[node name="BreakZone" type="Node" parent="StateMachine"]
script = SubResource( 8 )

[node name="Tween" type="Tween" parent="StateMachine"]

[node name="Trigger" type="Area2D" parent="."]
rotation = -1.5708
scale = Vector2( 1, 2.12 )
monitorable = false
collision_layer = 32
collision_mask = 0

[node name="CollisionShape2D" type="CollisionShape2D" parent="Trigger"]
shape = SubResource( 9 )

[node name="Collision" type="Area2D" parent="."]
monitorable = false
collision_layer = 0
collision_mask = 12

[node name="CollisionShape2D" type="CollisionShape2D" parent="Collision"]
position = Vector2( 4.72208, 0.429279 )
rotation = 1.5708
shape = SubResource( 10 )
one_way_collision = true
one_way_collision_margin = 4.9
[connection signal="area_entered" from="Trigger" to="StateMachine/FollowPath" method="_on_CollisionArea_area_entered"]
[connection signal="area_entered" from="Trigger" to="StateMachine/BreakZone" method="_on_CollisionArea_area_entered"]
[connection signal="body_shape_entered" from="Collision" to="." method="_on_Collision_body_shape_entered"]
