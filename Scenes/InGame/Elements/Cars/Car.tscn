[gd_scene load_steps=62 format=2]

[ext_resource path="res://Assets/Sprites/Sheets/Car_b.png" type="Texture" id=1]
[ext_resource path="res://Scripts/StateMachine.gd" type="Script" id=2]
[ext_resource path="res://Assets/Sprites/Sheets/Car_r.png" type="Texture" id=3]
[ext_resource path="res://Assets/Sounds/engine-loop-1.ogg" type="AudioStream" id=4]
[ext_resource path="res://Assets/Sounds/car_crash.wav" type="AudioStream" id=5]
[ext_resource path="res://Assets/Sprites/Png/light_car.png" type="Texture" id=6]
[ext_resource path="res://Assets/Sprites/Sheets/CardeadF.png" type="Texture" id=7]
[ext_resource path="res://Assets/Sprites/Sheets/DogDeathBlue(1).png" type="Texture" id=8]
[ext_resource path="res://Assets/Sprites/Sheets/DogDeathRed.png" type="Texture" id=9]
[ext_resource path="res://Assets/Sprites/Sheets/Cardeadred.png" type="Texture" id=10]

[sub_resource type="GDScript" id=1]
script/source = "extends PathFollow2D

signal car_following_signal
signal car_not_following_signal

export (float) var init_speed = 40;
export (Enums.DRIVER_MOOD) var driver_mood
const CRITICAL_DEAD_SPEED = 10

var speed : float

func set_speed(value):
	speed = value

func _ready():
	speed = init_speed
	Events.connect(\"car_following_signal\", self, \"_on_car_following\")
	Events.connect(\"car_not_following_signal\", self, \"_on_car_not_following\")
	
func _on_car_following(car : Node2D, followed_car : Node2D) -> void:
	if car == self:
		emit_signal(\"car_following_signal\", followed_car)
		
func _on_car_not_following(car : Node2D, followed_car : Node2D) -> void:
	if car == self:
		emit_signal(\"car_not_following_signal\", followed_car)
		
func change_path(path : Path2D) -> void:
	get_parent().call_deferred(\"remove_child\", self)
	path.call_deferred(\"add_child\", self)
	offset = 0
	
func _on_Collision_body_shape_entered(body_id, body, body_shape, area_shape):
	if speed <= CRITICAL_DEAD_SPEED:
		return
	Events.emit_signal(\"stop_signal\",body_id) # stop process of doggo and human
	body.visible = false
	$AnimationPlayer.play(\"crash_\"+$AnimatedSprite.animation+\"_\"+body.get_name())
	yield($AnimationPlayer,\"animation_finished\")
	Events.emit_signal(\"died_signal\", body_id, Enums.DIE_TYPE.CRUSHED_BY_CAR)

func _on_FollowedArea_area_entered(area):
	Events.emit_signal(\"car_following_signal\", area.get_parent(), self)

func _on_FollowedArea_area_exited(area):
	Events.emit_signal(\"car_not_following_signal\", area.get_parent(), self)
"

[sub_resource type="AtlasTexture" id=2]
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=3]
atlas = ExtResource( 1 )
region = Rect2( 128, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 1 )
region = Rect2( 256, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 1 )
region = Rect2( 0, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 3 )
region = Rect2( 0, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=7]
atlas = ExtResource( 3 )
region = Rect2( 128, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=8]
atlas = ExtResource( 3 )
region = Rect2( 256, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=9]
atlas = ExtResource( 3 )
region = Rect2( 0, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=10]
atlas = ExtResource( 7 )
region = Rect2( 0, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=11]
atlas = ExtResource( 7 )
region = Rect2( 128, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=12]
atlas = ExtResource( 7 )
region = Rect2( 256, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=13]
atlas = ExtResource( 7 )
region = Rect2( 0, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=14]
atlas = ExtResource( 7 )
region = Rect2( 128, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=15]
atlas = ExtResource( 7 )
region = Rect2( 256, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=16]
atlas = ExtResource( 7 )
region = Rect2( 0, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=17]
atlas = ExtResource( 7 )
region = Rect2( 128, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=18]
atlas = ExtResource( 7 )
region = Rect2( 256, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=19]
atlas = ExtResource( 8 )
region = Rect2( 0, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=20]
atlas = ExtResource( 8 )
region = Rect2( 128, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=21]
atlas = ExtResource( 8 )
region = Rect2( 0, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=22]
atlas = ExtResource( 8 )
region = Rect2( 128, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=23]
atlas = ExtResource( 8 )
region = Rect2( 0, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=24]
atlas = ExtResource( 8 )
region = Rect2( 128, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=25]
atlas = ExtResource( 9 )
region = Rect2( 0, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=26]
atlas = ExtResource( 9 )
region = Rect2( 128, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=27]
atlas = ExtResource( 9 )
region = Rect2( 0, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=28]
atlas = ExtResource( 9 )
region = Rect2( 128, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=29]
atlas = ExtResource( 9 )
region = Rect2( 0, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=30]
atlas = ExtResource( 9 )
region = Rect2( 128, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=31]
atlas = ExtResource( 10 )
region = Rect2( 0, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=32]
atlas = ExtResource( 10 )
region = Rect2( 128, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=33]
atlas = ExtResource( 10 )
region = Rect2( 256, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=34]
atlas = ExtResource( 10 )
region = Rect2( 0, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=35]
atlas = ExtResource( 10 )
region = Rect2( 128, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=36]
atlas = ExtResource( 10 )
region = Rect2( 256, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=37]
atlas = ExtResource( 10 )
region = Rect2( 0, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=38]
atlas = ExtResource( 10 )
region = Rect2( 128, 256, 128, 128 )

[sub_resource type="SpriteFrames" id=39]
animations = [ {
"frames": [ SubResource( 2 ), SubResource( 3 ), SubResource( 4 ), SubResource( 5 ) ],
"loop": true,
"name": "blue",
"speed": 5.0
}, {
"frames": [ SubResource( 6 ), SubResource( 7 ), SubResource( 8 ), SubResource( 9 ) ],
"loop": true,
"name": "orange",
"speed": 5.0
}, {
"frames": [ SubResource( 10 ), SubResource( 11 ), SubResource( 12 ), SubResource( 13 ), SubResource( 14 ), SubResource( 15 ), SubResource( 16 ), SubResource( 17 ), SubResource( 18 ) ],
"loop": true,
"name": "crash_blue_guy",
"speed": 5.0
}, {
"frames": [ SubResource( 19 ), SubResource( 20 ), SubResource( 21 ), SubResource( 22 ), SubResource( 23 ), SubResource( 24 ) ],
"loop": true,
"name": "crash_blue_doggo",
"speed": 5.0
}, {
"frames": [ SubResource( 25 ), SubResource( 26 ), SubResource( 27 ), SubResource( 28 ), SubResource( 29 ), SubResource( 30 ) ],
"loop": true,
"name": "crash_orange_doggo",
"speed": 5.0
}, {
"frames": [ SubResource( 31 ), SubResource( 32 ), SubResource( 33 ), SubResource( 34 ), SubResource( 35 ), SubResource( 36 ), SubResource( 37 ), SubResource( 38 ) ],
"loop": true,
"name": "crash_orange_guy",
"speed": 5.0
} ]

[sub_resource type="GDScript" id=40]
script/source = "extends AnimatedSprite

var color = [\"orange\", \"blue\"]

func _ready(): 
	color.shuffle()
	self.play(color.front())
"

[sub_resource type="GDScript" id=41]
resource_name = "FollowPath"
script/source = "extends Node

var fsm : StateMachine
var is_active = false
var _last_area : Area2D

onready var _path_follower : Node2D = get_node(\"../..\")
var _tween : Tween

func _ready():
	_tween = get_node(\"../Tween\")
	if _path_follower:
		_path_follower.connect(\"car_following_signal\", self, \"_on_car_following\")
	set_block_signals(true)

func enter(var params : Array) -> void:
	match _path_follower.driver_mood:
		Enums.DRIVER_MOOD.NORMAL:
			_tween.interpolate_property(_path_follower, \"speed\", null, _path_follower.init_speed, 2, Tween.TRANS_LINEAR, Tween.EASE_OUT)
		Enums.DRIVER_MOOD.DRUNK:
			_tween.interpolate_property(_path_follower, \"speed\", null, _path_follower.init_speed, 2, Tween.TRANS_LINEAR, Tween.EASE_OUT)
		Enums.DRIVER_MOOD.FAST:
			_tween.interpolate_property(_path_follower, \"speed\", null, _path_follower.init_speed, 1, Tween.TRANS_LINEAR, Tween.EASE_OUT)
	_tween.start()
	
func exit(next_state : String, params : Array) -> void:
	_tween.stop_all()
	fsm.change_to(next_state, params)
	
func process(delta) -> void:
		_update_car_position(delta)

func _update_car_position(delta) -> void:
	_path_follower.set_offset(_path_follower.get_offset() + _path_follower.speed * delta)

func _on_CollisionArea_area_entered(area : Area2D) -> void:
	if is_active && _last_area != area:
		_last_area = area
		match area.get_type():
			Enums.TRIGGER_TYPE.CHANGE_TRACK:
				_path_follower.change_path(area.get_track_path())
			Enums.TRIGGER_TYPE.BREAK_ZONE:
				exit(\"BreakZone\", [])

func _on_car_following(car : Node2D) -> void:
	if is_active:
		exit(\"FollowCar\", [car])
		

"

[sub_resource type="GDScript" id=42]
resource_name = "BreakZone"
script/source = "extends Node

var fsm : StateMachine
var _tween : Tween

var is_active = false
var _last_area : Area2D

onready var _path_follower : Node2D = get_node(\"../..\")
onready var _trigger = _path_follower.get_node(\"Trigger\")

func _ready():
	_tween = get_node(\"../Tween\")
	if _path_follower:
		_path_follower.connect(\"car_following_signal\", self, \"_on_car_following\")
	set_block_signals(true)

func enter(var params : Array) -> void:
	match _path_follower.driver_mood:
		Enums.DRIVER_MOOD.NORMAL:
			_tween.interpolate_property(_path_follower, \"speed\", null, 0, 0.7, Tween.TRANS_LINEAR,  Tween.EASE_OUT)
		Enums.DRIVER_MOOD.DRUNK:
			_tween.interpolate_property(_path_follower, \"speed\", null, _path_follower.init_speed/2, 0.6, Tween.TRANS_LINEAR,  Tween.EASE_OUT)
		Enums.DRIVER_MOOD.FAST:
			_tween.interpolate_property(_path_follower, \"speed\", null, 0, 0.5, Tween.TRANS_LINEAR,  Tween.EASE_OUT)
	_tween.start()
	
func exit(next_state : String, params : Array) -> void:
	_tween.stop_all()
	fsm.change_to(next_state, params)
	
func process(delta):
	_path_follower.set_offset(_path_follower.get_offset() + _path_follower.speed * delta)
	if !_is_inside_break_zone():
		exit(\"FollowPath\", [])
		
func _is_inside_break_zone():
	for area in _trigger.get_overlapping_areas():
		if area.get_type() == Enums.TRIGGER_TYPE.BREAK_ZONE && area.get_child_count() && !area.get_children()[0].disabled:
			return true
	return false

func _on_CollisionArea_area_entered(area : Area2D) -> void:
	if is_active && _last_area != area:
		_last_area = area
		match area.get_type():
			Enums.TRIGGER_TYPE.CHANGE_TRACK:
				_path_follower.change_path(area.get_track_path())
				
func _on_car_following(car : Node2D) -> void:
	if is_active:
		exit(\"FollowCar\", [car])
"

[sub_resource type="GDScript" id=43]
resource_name = "FollowCar"
script/source = "extends Node

var fsm : StateMachine
var is_active = false
var _last_area : Area2D

var _car : Node2D = null

onready var _path_follower : Node2D = get_node(\"../..\")

func _ready():
	_path_follower.connect(\"car_not_following_signal\", self, \"_on_car_not_following\")

func enter(var params : Array) -> void:
	if params.size() != 1:
		exit(\"FollowPath\", [])
	else:
		_car = params[0]
	
func exit(next_state : String, params : Array) -> void:
	fsm.change_to(next_state, params)
	
func process(delta) -> void:
	_update_car_position(delta)

func _update_car_position(delta) -> void:
	_path_follower.speed = _car.speed
	_path_follower.set_offset(_path_follower.get_offset() + _path_follower.speed * delta)

func _on_Trigger_area_entered(area):
	if is_active && _last_area != area:
		_last_area = area
		match area.get_type():
			Enums.TRIGGER_TYPE.CHANGE_TRACK:
				_path_follower.change_path(area.get_track_path())
				
func _on_car_not_following(car : Node2D) -> void:
	if is_active:
		exit(\"FollowPath\", [])
		_car = null
"

[sub_resource type="RectangleShape2D" id=44]
extents = Vector2( 6.3989, 2.36384 )

[sub_resource type="RectangleShape2D" id=45]
extents = Vector2( 15.9143, 36.0754 )

[sub_resource type="RectangleShape2D" id=46]
extents = Vector2( 15.9143, 36.9403 )

[sub_resource type="Animation" id=47]
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("AnimatedSprite:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ "crash_blue_guy" ]
}
tracks/1/type = "method"
tracks/1/path = NodePath("CrashAudioPlayer2D")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ 0.0 ],
"method": "play"
} ]
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("AnimatedSprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 8, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.8 )
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.7, 1.5 ),
"transitions": PoolRealArray( 1, 1 ),
"values": [ {
"args": [ 20 ],
"method": "set_speed"
}, {
"args": [ 0 ],
"method": "set_speed"
} ]
}

[sub_resource type="Animation" id=48]
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("AnimatedSprite:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ "crash_blue_doggo" ]
}
tracks/1/type = "method"
tracks/1/path = NodePath("CrashAudioPlayer2D")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ 0.0 ],
"method": "play"
} ]
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("AnimatedSprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 4, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.8 )
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.7, 1.5 ),
"transitions": PoolRealArray( 1, 1 ),
"values": [ {
"args": [ 20 ],
"method": "set_speed"
}, {
"args": [ 0 ],
"method": "set_speed"
} ]
}

[sub_resource type="Animation" id=49]
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("AnimatedSprite:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ "crash_orange_guy" ]
}
tracks/1/type = "method"
tracks/1/path = NodePath("CrashAudioPlayer2D")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ 0.0 ],
"method": "play"
} ]
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("AnimatedSprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 8, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.8 )
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.7, 1.5 ),
"transitions": PoolRealArray( 1, 1 ),
"values": [ {
"args": [ 20 ],
"method": "set_speed"
}, {
"args": [ 0 ],
"method": "set_speed"
} ]
}

[sub_resource type="Animation" id=50]
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("AnimatedSprite:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ "crash_orange_doggo" ]
}
tracks/1/type = "method"
tracks/1/path = NodePath("CrashAudioPlayer2D")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ 0.0 ],
"method": "play"
} ]
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("AnimatedSprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 4, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.8 )
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.7, 1.5 ),
"transitions": PoolRealArray( 1, 1 ),
"values": [ {
"args": [ 20 ],
"method": "set_speed"
}, {
"args": [ 0 ],
"method": "set_speed"
} ]
}

[sub_resource type="RectangleShape2D" id=51]
extents = Vector2( 17.0026, 21.9095 )

[node name="CarPathFollower" type="PathFollow2D"]
cubic_interp = false
loop = false
script = SubResource( 1 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
position = Vector2( 5.53244, -1.15984 )
rotation = -1.5708
frames = SubResource( 39 )
animation = "blue"
script = SubResource( 40 )

[node name="StateMachine" type="Node" parent="."]
script = ExtResource( 2 )

[node name="FollowPath" type="Node" parent="StateMachine"]
script = SubResource( 41 )

[node name="BreakZone" type="Node" parent="StateMachine"]
script = SubResource( 42 )

[node name="FollowCar" type="Node" parent="StateMachine"]
script = SubResource( 43 )

[node name="Tween" type="Tween" parent="StateMachine"]

[node name="Trigger" type="Area2D" parent="."]
rotation = -1.5708
scale = Vector2( 1, 2.12 )
monitorable = false
collision_layer = 32
collision_mask = 0

[node name="CollisionShape2D" type="CollisionShape2D" parent="Trigger"]
shape = SubResource( 44 )

[node name="StaticBody2D" type="StaticBody2D" parent="."]
collision_layer = 0
collision_mask = 12

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2( 4.16087, 0.429287 )
rotation = 1.5708
shape = SubResource( 45 )
one_way_collision_margin = 4.9

[node name="Collision" type="Area2D" parent="."]
collision_layer = 64
collision_mask = 12

[node name="CollisionShape2D" type="CollisionShape2D" parent="Collision"]
position = Vector2( 4.72208, 0.429279 )
rotation = 1.5708
shape = SubResource( 46 )
one_way_collision = true
one_way_collision_margin = 4.9

[node name="AudioStreamPlayer2D" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 4 )
volume_db = 1.0
autoplay = true
max_distance = 1000.0

[node name="CrashAudioPlayer2D" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 5 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/crash_blue_BlindGuy = SubResource( 47 )
anims/crash_blue_Doggo = SubResource( 48 )
anims/crash_orange_BlindGuy = SubResource( 49 )
anims/crash_orange_Doggo = SubResource( 50 )

[node name="VisibilityEnabler2D" type="VisibilityEnabler2D" parent="."]
position = Vector2( 1.66435, 0.693479 )
scale = Vector2( 3.99582, 1.67961 )
process_parent = true
physics_process_parent = true

[node name="lights" type="Node2D" parent="."]

[node name="front_right" type="Light2D" parent="lights"]
position = Vector2( 62.6748, -10.732 )
rotation = 1.5708
texture = ExtResource( 6 )
texture_scale = 0.18
color = Color( 0.807843, 0.866667, 0.12549, 1 )

[node name="front_right2" type="Light2D" parent="lights"]
position = Vector2( 62.6748, 10.0881 )
rotation = 1.5708
texture = ExtResource( 6 )
texture_scale = 0.18
color = Color( 0.807843, 0.866667, 0.12549, 1 )

[node name="front_right3" type="Light2D" parent="lights"]
position = Vector2( -37.5619, 13.3077 )
rotation = -1.5708
scale = Vector2( 1, 0.6 )
texture = ExtResource( 6 )
texture_scale = 0.1
color = Color( 0.866667, 0.12549, 0.12549, 1 )

[node name="front_right4" type="Light2D" parent="lights"]
position = Vector2( -37.5619, -8.37094 )
rotation = -1.5708
scale = Vector2( 1, 0.6 )
texture = ExtResource( 6 )
texture_scale = 0.1
color = Color( 0.866667, 0.12549, 0.12549, 1 )

[node name="FollowedArea" type="Area2D" parent="."]
monitorable = false
collision_layer = 0
collision_mask = 64

[node name="CollisionShape2D" type="CollisionShape2D" parent="FollowedArea"]
position = Vector2( -53.1423, 0.291992 )
shape = SubResource( 51 )
[connection signal="area_entered" from="Trigger" to="StateMachine/FollowPath" method="_on_CollisionArea_area_entered"]
[connection signal="area_entered" from="Trigger" to="StateMachine/BreakZone" method="_on_CollisionArea_area_entered"]
[connection signal="area_entered" from="Trigger" to="StateMachine/FollowCar" method="_on_Trigger_area_entered"]
[connection signal="body_shape_entered" from="Collision" to="." method="_on_Collision_body_shape_entered"]
[connection signal="area_entered" from="FollowedArea" to="." method="_on_FollowedArea_area_entered"]
[connection signal="area_exited" from="FollowedArea" to="." method="_on_FollowedArea_area_exited"]
