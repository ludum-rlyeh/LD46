[gd_scene load_steps=4 format=2]

[ext_resource path="res://Scripts/Map/RedLights/BreakArea.gd" type="Script" id=1]

[sub_resource type="GDScript" id=1]
resource_name = "RedLight"
script/source = "extends Node2D

export (Enums.RED_LIGHT_COLOR) var current_color = Enums.RED_LIGHT_COLOR.RED
export (float) var time_orange = 2.0
export (float) var time_green = 10.0
export (float) var time_warning = 1.0
export (Enums.RED_LIGHT_MODE) var _state 
var _timer : Timer

var _zone_i = 0

export (bool) var Debug = false

# Called when the node enters the scene tree for the first time.
func _ready():
	_init_red_lights()
	
	_timer = Timer.new()
	add_child(_timer)
	_timer.connect(\"timeout\", self, \"_on_timer_finished\")
	_timer.wait_time = time_green
	_timer.one_shot = true
	_timer.start()
	
	
	
func _init_red_lights():
	var color = Enums.RED_LIGHT_COLOR.GREEN
	var enable = false
	for zone in get_children():
		var children = zone.get_children()
		for obj in children:
			match obj.get_class():
				\"Area2D\":
					for shape in obj.get_children():
						shape.disabled = !enable
				\"AnimatedSprite\":
					if obj.frames.get_frame_count(obj.animation) > int(color):
						obj.frame = color
		color = Enums.RED_LIGHT_COLOR.RED
		enable = true

func _get_next_zone():
	_zone_i = (_zone_i + 1) % get_children().size()
	while !get_children()[_zone_i].get_name().begins_with(\"BreakZone\"):
		_zone_i = (_zone_i + 1) % get_children().size()

func _update_zone(zone : Node2D, color, enable : bool):
	for obj in zone.get_children():
		match obj.get_class():
			\"Area2D\":
				for zone in obj.get_children():
					zone.disabled = !enable
			\"AnimatedSprite\":
				if obj.frames.get_frame_count(obj.animation) > int(color):
					obj.frame = color

func _update_all_zone_color(color):
	for obj in get_children():
		if obj.get_class() == \"AnimatedSprite\":
			if obj.frames.get_frame_count(obj.animation) > int(color):
				obj.frame = color

func _update_all_zone_break(enable : bool):
	for obj in get_children():
		if obj.get_class() == \"Area2D\":
			for zone in obj.get_children():
				zone.disabled = !enable

func _next_color() -> void:
	match current_color:
		Enums.RED_LIGHT_COLOR.GREEN:
			current_color = Enums.RED_LIGHT_COLOR.ORANGE
			_timer.wait_time = time_orange
			_update_zone(get_children()[_zone_i], current_color, true)
			if Debug: print(\"Pass to orange\")
		_:
			current_color = Enums.RED_LIGHT_COLOR.RED
			_update_zone(get_children()[_zone_i], current_color, true)
			_get_next_zone()
			current_color = Enums.RED_LIGHT_COLOR.GREEN
			_update_zone(get_children()[_zone_i], current_color, false)
			_timer.wait_time = time_green
			if Debug: print(\"Pass to red\")
	_timer.start()

func _next_warning() -> void:
	match current_color:
		Enums.RED_LIGHT_COLOR.ORANGE:
			current_color = Enums.RED_LIGHT_COLOR.NO_COLOR
			_update_all_zone_color(current_color)
		_:
			current_color = Enums.RED_LIGHT_COLOR.ORANGE
			_update_all_zone_color(current_color)

	_timer.wait_time = time_warning
	_timer.start()

func change_state(var state) -> void:
	_state = state
	_on_timer_finished()


func _on_timer_finished() -> void:
	if Debug : print(\"Timer red light finished\")
	match _state:
		Enums.RED_LIGHT_MODE.NORMAL:
			_next_color()
		Enums.RED_LIGHT_MODE.WARNING:
			_next_warning()
			_update_all_zone_break(false)

"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 40.0007, 120 )

[node name="RedLightCross" type="Node2D"]
script = SubResource( 1 )

[node name="BreakZone1" type="Node2D" parent="."]

[node name="UpBreakZone" type="Area2D" parent="BreakZone1"]
monitoring = false
collision_layer = 0
collision_mask = 32
script = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="BreakZone1/UpBreakZone"]
position = Vector2( 0, -48 )
rotation = 3.14159
shape = SubResource( 2 )
one_way_collision = true

[node name="CollisionShape2D2" type="CollisionShape2D" parent="BreakZone1/UpBreakZone"]
position = Vector2( 144, 648 )
rotation = -5.07036e-06
shape = SubResource( 2 )
one_way_collision = true

[node name="BreakZone2" type="Node2D" parent="."]

[node name="LeftBreakZone" type="Area2D" parent="BreakZone2"]
position = Vector2( -248, 368 )
rotation = -1.5708
monitoring = false
collision_layer = 0
collision_mask = 32
script = ExtResource( 1 )

[node name="CollisionShape2D2" type="CollisionShape2D" parent="BreakZone2/LeftBreakZone"]
position = Vector2( 143.998, 672.001 )
rotation = 4.7048e-06
shape = SubResource( 2 )
one_way_collision = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="BreakZone2/LeftBreakZone"]
position = Vector2( 0.00012207, -48 )
rotation = 3.14159
shape = SubResource( 2 )
one_way_collision = true
