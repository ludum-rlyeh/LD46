[gd_scene load_steps=11 format=2]

[ext_resource path="res://Scenes/InGame/Levels/TestLevel.tscn" type="PackedScene" id=1]
[ext_resource path="res://Scenes/InGame/HUD/HUD.tscn" type="PackedScene" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends Control


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
	VisualServer.set_default_clear_color(Color(0.0,0.0,0.0,1.0))




# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass
"

[sub_resource type="VisualShaderNodeInput" id=3]
output_port_for_preview = 0
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTextureUniform" id=8]
uniform_name = "ViewportTexture"

[sub_resource type="VisualShaderNodeVec3Constant" id=9]
constant = Vector3( 0.21, 0.71, 0.07 )

[sub_resource type="VisualShaderNodeDotProduct" id=10]

[sub_resource type="VisualShader" id=5]
code = "shader_type canvas_item;
uniform sampler2D ViewportTexture;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(SCREEN_UV, 0.0);

// TextureUniform:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 n_tex_read = texture(ViewportTexture, n_out3p0.xy);
		n_out5p0 = n_tex_read.rgb;
		n_out5p1 = n_tex_read.a;
	}

// Vector:6
	vec3 n_out6p0 = vec3(0.210000, 0.710000, 0.070000);

// DotProduct:8
	float n_out8p0 = dot(n_out5p0, n_out6p0);

// Output:0
	COLOR.rgb = vec3(n_out8p0);

}

void light() {
// Output:0

}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1000, 80 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( 180, 160 )
nodes/fragment/5/node = SubResource( 8 )
nodes/fragment/5/position = Vector2( 420, 140 )
nodes/fragment/6/node = SubResource( 9 )
nodes/fragment/6/position = Vector2( 280, 360 )
nodes/fragment/8/node = SubResource( 10 )
nodes/fragment/8/position = Vector2( 720, 240 )
nodes/fragment/connections = PoolIntArray( 3, 0, 5, 0, 6, 0, 8, 1, 5, 0, 8, 0, 8, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )

[sub_resource type="GDScript" id=7]
script/source = "extends ColorRect


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
	self.material.set_shader_param(\"ViewportTexture\", get_node(\"../ViewportContainer/Viewport\").get_texture())
"

[node name="Game" type="Control"]
pause_mode = 1
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ViewportContainer" type="ViewportContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
stretch = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Viewport" type="Viewport" parent="ViewportContainer"]
size = Vector2( 1024, 600 )
transparent_bg = true
handle_input_locally = false
hdr = false
render_target_update_mode = 3

[node name="Map0" parent="ViewportContainer/Viewport" instance=ExtResource( 1 )]

[node name="HUD" parent="ViewportContainer/Viewport" instance=ExtResource( 3 )]

[node name="ColorRect" type="ColorRect" parent="."]
visible = false
material = SubResource( 6 )
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}
